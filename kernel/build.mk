KERNEL_ELF_NAME = kernel.elf

KERNEL_ELF_PATH = $(KERNEL_BUILD_DIR)/$(KERNEL_ELF_NAME)

KERNEL_C_COMPILER = $(COMMON_C_COMPILER)

KERNEL_C_FLAGS = $(COMMON_C_FLAGS)
KERNEL_C_FLAGS += -Wno-error=pragmas
KERNEL_C_FLAGS += -mno-red-zone
KERNEL_C_FLAGS += -mno-avx
KERNEL_C_FLAGS += -fPIE
KERNEL_C_FLAGS += -fstrict-aliasing
KERNEL_C_FLAGS += -ffreestanding
KERNEL_C_FLAGS += -fno-stack-protector
KERNEL_C_FLAGS += -fno-stack-check

#KERNEL_C_INC_DIR = $(KERNEL_SRC_DIR)/include

# lld of llvm fails in linking loader
KERNEL_LINK_LINKER = $(COMMON_LINK_LINKER)

KERNEL_LINK_FLAGS = $(COMMON_LINK_FLAGS)
KERNEL_LINK_FLAGS += --no-undefined
KERNEL_LINK_FLAGS += --fatal-warnings

KERNEL_LINK_LIB_DIR =
KERNEL_LINK_SCRIPT = $(KERNEL_SRC_DIR)/kernel.lds
KERNEL_LINK_START = $(KERNEL_BUILD_DIR)/main.c.o

KERNEL_C_SRC = $(call rwildcard,$(KERNEL_SRC_DIR)/,*.c)
KERNEL_C_OBJ = $(patsubst $(KERNEL_SRC_DIR)/%.c,$(KERNEL_BUILD_DIR)/%.c.o,$(KERNEL_C_SRC))

KERNEL_ALL_OBJ_EXCEPT_START = $(filter-out $(KERNEL_LINK_START),$(KERNEL_C_OBJ))
KERNEL_ALL_OBJ = $(KERNEL_LINK_START) $(KERNEL_ALL_OBJ_EXCEPT_START)

#KERNEL_C_FLAGS += $(patsubst %,-I%,$(KERNEL_C_INC_DIR))
KERNEL_LINK_FLAGS += $(patsubst %,-L%,$(KERNEL_LINK_LIB_DIR))
KERNEL_LINK_FLAGS += $(patsubst %,-T %,$(KERNEL_LINK_SCRIPT))

$(KERNEL_BUILD_DIR):
	mkdir $@

$(KERNEL_ALL_OBJ): | $(KERNEL_BUILD_DIR)

$(KERNEL_BUILD_DIR)/%.c.o: $(KERNEL_SRC_DIR)/%.c
	$(KERNEL_C_COMPILER) $(KERNEL_C_FLAGS) -o $@ $<

$(KERNEL_ELF_PATH): | $(KERNEL_BUILD_DIR)
$(KERNEL_ELF_PATH): $(KERNEL_ALL_OBJ)
	$(KERNEL_LINK_LINKER) $(KERNEL_LINK_FLAGS) -o $@ $^

$(KERNEL_BUILD_DIR)/default: $(KERNEL_BUILD_DIR)/all
$(KERNEL_BUILD_DIR)/all: $(KERNEL_ELF_PATH)
$(KERNEL_BUILD_DIR)/everything: $(KERNEL_BUILD_DIR)/all $(KERNEL_BUILD_DIR)/clean
$(KERNEL_BUILD_DIR)/clean:
	rm -f $(KERNEL_BUILD_DIR)/*.o $(KERNEL_BUILD_DIR)/*.elf

