LOADER_SO_NAME = loader.so
LOADER_EFI_NAME = loader.efi

LOADER_EFI_PATH = $(LOADER_BUILD_DIR)/$(LOADER_EFI_NAME)

LOADER_C_COMPILER = $(COMMON_C_COMPILER)

LOADER_C_FLAGS = $(COMMON_C_FLAGS)
LOADER_C_FLAGS += -c
LOADER_C_FLAGS += -Wno-error=pragmas
LOADER_C_FLAGS += -mno-red-zone
LOADER_C_FLAGS += -mno-avx
LOADER_C_FLAGS += -fPIC
LOADER_C_FLAGS += -fshort-wchar
LOADER_C_FLAGS += -fno-strict-aliasing
LOADER_C_FLAGS += -ffreestanding
LOADER_C_FLAGS += -fno-stack-protector
LOADER_C_FLAGS += -fno-stack-check

LOADER_C_INC_DIR = /usr/include /usr/include/efi /usr/include/efi/x86_64

# lld of llvm fails in linking loader
LOADER_LINK_LINKER = ld

LOADER_LINK_FLAGS = $(COMMON_LINK_FLAGS)
LOADER_LINK_FLAGS += --no-undefined
LOADER_LINK_FLAGS += --fatal-warnings
LOADER_LINK_FLAGS += --build-id=sha1
LOADER_LINK_FLAGS += -shared
LOADER_LINK_FLAGS += -Bsymbolic

LOADER_LINK_LIB_DIR = /usr/lib
LOADER_LINK_SCRIPT = /usr/lib/elf_x86_64_efi.lds
LOADER_LINK_START = /usr/lib/crt0-efi-x86_64.o
LOADER_LINK_LIBS = efi gnuefi

LOADER_EFI_OBJCOPY = objcopy
LOADER_EFI_FLAGS =
LOADER_EFI_FLAGS += --target efi-app-x86_64
LOADER_EFI_SECTIONS =
LOADER_EFI_SECTIONS += .text
LOADER_EFI_SECTIONS += .sdata
LOADER_EFI_SECTIONS += .data
LOADER_EFI_SECTIONS += .dynamic
LOADER_EFI_SECTIONS += .dynstr
LOADER_EFI_SECTIONS += .dynsym
LOADER_EFI_SECTIONS += .rel
LOADER_EFI_SECTIONS += .rela
LOADER_EFI_SECTIONS += .rel.*
LOADER_EFI_SECTIONS += .rela.*
LOADER_EFI_SECTIONS += .rel*
LOADER_EFI_SECTIONS += .rela*
LOADER_EFI_SECTIONS += .reloc

LOADER_C_SRC = $(call rwildcard,$(LOADER_SRC_DIR)/,*.c)
LOADER_C_OBJ = $(patsubst $(LOADER_SRC_DIR)/%.c,$(LOADER_BUILD_DIR)/%.c.o,$(LOADER_C_SRC))

LOADER_ALL_OBJ = $(LOADER_C_OBJ)

LOADER_C_FLAGS += $(patsubst %,-I%,$(LOADER_C_INC_DIR))
LOADER_LINK_FLAGS += $(patsubst %,-L%,$(LOADER_LINK_LIB_DIR))
LOADER_LINK_FLAGS += $(patsubst %,-T %,$(LOADER_LINK_SCRIPT))
LOADER_EFI_FLAGS += $(patsubst %,-j %,$(LOADER_EFI_SECTIONS))

LOADER_LINK_LIB_FRONT = $(LOADER_LINK_START)
LOADER_LINK_LIB_BACK = $(patsubst %,-l%,$(LOADER_LINK_LIBS))

$(LOADER_BUILD_DIR):
	mkdir $@

$(LOADER_ALL_OBJ): | $(LOADER_BUILD_DIR)

$(LOADER_BUILD_DIR)/%.c.o: $(LOADER_SRC_DIR)/%.c
	$(LOADER_C_COMPILER) $(LOADER_C_FLAGS) -o $@ $<

$(LOADER_BUILD_DIR)/$(LOADER_SO_NAME): | $(LOADER_BUILD_DIR)
$(LOADER_BUILD_DIR)/$(LOADER_SO_NAME): $(LOADER_ALL_OBJ)
	$(LOADER_LINK_LINKER) $(LOADER_LINK_FLAGS) -o $@ $(LOADER_LINK_LIB_FRONT) $^ $(LOADER_LINK_LIB_BACK)

$(LOADER_BUILD_DIR)/$(LOADER_EFI_NAME): | $(LOADER_BUILD_DIR)
$(LOADER_EFI_PATH): $(LOADER_BUILD_DIR)/$(LOADER_SO_NAME)
	$(LOADER_EFI_OBJCOPY) $(LOADER_EFI_FLAGS) $< $@

$(LOADER_BUILD_DIR)/default: $(LOADER_BUILD_DIR)/all
$(LOADER_BUILD_DIR)/all: $(LOADER_EFI_PATH)
$(LOADER_BUILD_DIR)/everything: $(LOADER_BUILD_DIR)/all $(LOADER_BUILD_DIR)/clean
$(LOADER_BUILD_DIR)/clean:
	rm -f $(LOADER_BUILD_DIR)/*.o $(LOADER_BUILD_DIR)/*.so $(LOADER_BUILD_DIR)/*.efi

